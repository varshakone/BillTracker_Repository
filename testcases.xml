<?xml version="1.0"?>
<test-cases>
  <cases>
    <test-case-type>Business</test-case-type>
    <name>BusinessTestFor_GenerateBill_Success</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Business</test-case-type>
    <name>BusinessTestFor_ListOfPaidAndUnpaidBills</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Business</test-case-type>
    <name>BusinessTestFor_ListBillsByDueDate</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Business</test-case-type>
    <name>RegisterNewUser_Success</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Business</test-case-type>
    <name>BusinessTestFor_ValidUserFound</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Functional</test-case-type>
    <name>FunctionalTestFor_RegisterNewUser</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Functional</test-case-type>
    <name>FunctionalTestFor_ListOfPaidAndUnpaidBills</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Functional</test-case-type>
    <name>FunctionallTestFor_GenerateBill_Success</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Functional</test-case-type>
    <name>functionTestFor_ValidUserFound</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Functional</test-case-type>
    <name>FunctionalTestFor_ListBillsByDueDate</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Exception</test-case-type>
    <name>ExceptionTestFor_RegisterNewUser_Null_Failure</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Exception</test-case-type>
    <name>ExceptionTestFor_ListOfPaidAndUnpaidBillsNotFound</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Exception</test-case-type>
    <name>ExceptionTestFor_UserNotFound</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Exception</test-case-type>
    <name>ExceptionTestFor_ListBillsByDueDate_NotFound</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Exception</test-case-type>
    <name>ExceptionTestFor_GenerateBill_Null_Failure</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_ValidUserNameLengthAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_ValidPasswordLengthAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_BillDueDateAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_BillDateOfEntryAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_BillTitleAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_ValidUserNameAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_BillAmountAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
  <cases>
    <test-case-type>Boundary</test-case-type>
    <name>BoundaryTestFor_ValidUserEmailAsync</name>
    <expected-output>True</expected-output>
    <weight>2</weight>
    <mandatory>True</mandatory>
    <desc>na</desc>
  </cases>
</test-cases>